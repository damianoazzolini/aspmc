Started at: 
Wed Dec 13 17:19:17 CET 2023
Instance 2
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.027705669403076
[INFO] aspmc: Compilation time:         0.013485431671142578
[INFO] aspmc: Preparation time:         0.00013971328735351562
[INFO] aspmc: Counting time:            0.10853743553161621
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.251490592956543
Pre simplification
number of sums: 2401
number of prods: 7921
-0.868745812768978*v_15 + 0.868745812768978*v_31*(0.868745812768978*v_15 + 0.131254187231022) + 0.868745812768978
Post simplification
symp_time: 1.017590045928955
number of sums: 3
number of subs: 1
number of prods: 4
opt_time: 0.026018381118774414
     fun: 0.9000000000000002
     jac: array([1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01])

real	0m5.595s
user	0m4.790s
sys	0m0.611s
Instance 3
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0283641815185547
[INFO] aspmc: Compilation time:         0.014270782470703125
[INFO] aspmc: Preparation time:         0.00010704994201660156
[INFO] aspmc: Counting time:            0.10915994644165039
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2473959922790527
Pre simplification
number of sums: 2401
number of prods: 7921
0.868745812768978*v_31*(0.92274469442792*v_14 - 0.92274469442792*v_15*(v_14 - 1) + 0.0452236714289521*(v_14 - 1)*(v_15 - 1) + 0.0772553055720799) + 0.877521022998968*(v_14 - 1)*(v_15 - 1)
Post simplification
symp_time: 1.1449177265167236
number of sums: 3
number of subs: 6
number of prods: 9
opt_time: 0.11573290824890137
     fun: 1.8900000000000001
     jac: array([1., 1., 1.])
 message: 'Inequality constraints incompatible'
    nfev: 17
     nit: 5
    njev: 5
  status: 4
 success: False
       x: array([0.89, 0.11, 0.89])

real	0m5.535s
user	0m4.821s
sys	0m0.552s
Instance 4
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.027574300765991
[INFO] aspmc: Compilation time:         0.014042139053344727
[INFO] aspmc: Preparation time:         0.00011134147644042969
[INFO] aspmc: Counting time:            0.10630631446838379
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.247008800506592
Pre simplification
number of sums: 2401
number of prods: 7921
-0.770043145805155*v_14*v_15*v_30*v_31 + 0.877521022998968*v_14*v_15 + 0.770043145805155*v_14*v_30*v_31 - 0.877521022998968*v_14 + 0.770043145805155*v_15*v_30*v_31 - 0.877521022998968*v_15 + 0.107477877193813*v_30*v_31 + 0.877521022998968
Post simplification
symp_time: 1.2250170707702637
number of sums: 5
number of subs: 3
number of prods: 16
opt_time: 0.08226871490478516
     fun: 1.8000000000000007
     jac: array([1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01])

real	0m5.545s
user	0m4.863s
sys	0m0.520s
Instance 5
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.027991533279419
[INFO] aspmc: Compilation time:         0.014389514923095703
[INFO] aspmc: Preparation time:         0.00010895729064941406
[INFO] aspmc: Counting time:            0.10578560829162598
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.248857259750366
Pre simplification
number of sums: 2401
number of prods: 7921
0.877521022998968*v_30*v_31*(0.93206534790699*v_13 - 0.93206534790699*v_14*(v_13 - 1) + 0.93206534790699*v_15*(v_13 - 1)*(v_14 - 1) - 0.0456804761908607*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.06793465209301) - 0.886384871716129*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))
Post simplification
symp_time: 1.3282270431518555
number of sums: 3
number of subs: 16
number of prods: 23
opt_time: 1.2881200313568115
     fun: 2.89
     jac: array([1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 227
     nit: 29
    njev: 25
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89])

real	0m6.852s
user	0m5.902s
sys	0m0.569s
Instance 6
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0282154083251953
[INFO] aspmc: Compilation time:         0.014451026916503906
[INFO] aspmc: Preparation time:         0.00011038780212402344
[INFO] aspmc: Counting time:            0.10548996925354004
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.243307590484619
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0263265170748407*v_29*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0)) + 0.970299*v_29*(0.913517247483641*v_30*v_31*(0.93206534790699*v_13 - 0.93206534790699*v_14*(v_13 - 1) + 0.93206534790699*v_15*(v_13 - 1)*(v_14 - 1) - 0.0456804761908607*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.06793465209301) - 0.886384871716129*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))) + 0.886384871716129*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))
Post simplification
symp_time: 1.5842769145965576
number of sums: 7
number of subs: 32
number of prods: 49
opt_time: 0.33139920234680176
     fun: 2.700000000000001
     jac: array([1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m6.131s
user	0m5.430s
sys	0m0.518s
Instance 7
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028142213821411
[INFO] aspmc: Compilation time:         0.014511585235595703
[INFO] aspmc: Preparation time:         0.00011110305786132812
[INFO] aspmc: Counting time:            0.10500955581665039
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.244420051574707
Pre simplification
number of sums: 2401
number of prods: 7921
0.0265924414897381*v_29*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0)) + 0.970299*v_29*(0.913517247483641*v_30*v_31*(0.9509900499*v_12 - 0.9509900499*v_13*(v_12 - 1) + 0.941480149401*v_14*(v_12 - 1)*(v_13 - 1) - 0.941480149401*v_15*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0461418951422835*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.009509900499*(v_12 - 1)*(v_13 - 1) + 0.0490099501) + 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))) - 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))
Post simplification
symp_time: 1.6747467517852783
number of sums: 9
number of subs: 40
number of prods: 59
opt_time: 0.35124802589416504
     fun: 3.89
     jac: array([1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m6.245s
user	0m5.536s
sys	0m0.526s
Instance 8
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0285160541534424
[INFO] aspmc: Compilation time:         0.014258623123168945
[INFO] aspmc: Preparation time:         0.00011014938354492188
[INFO] aspmc: Counting time:            0.10709309577941895
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2458250522613525
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0265924414897381*v_29*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0)) + 0.970299*v_29*(0.92274469442792*v_28*v_30*v_31*(0.9509900499*v_12 - 0.9509900499*v_13*(v_12 - 1) + 0.941480149401*v_14*(v_12 - 1)*(v_13 - 1) - 0.941480149401*v_15*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0461418951422835*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.009509900499*(v_12 - 1)*(v_13 - 1) + 0.0490099501) - 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))) + 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))
Post simplification
symp_time: 2.054297924041748
number of sums: 15
number of subs: 56
number of prods: 93
opt_time: 0.6369333267211914
     fun: 3.6
     jac: array([1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m6.926s
user	0m6.207s
sys	0m0.536s
Instance 9
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0287792682647705
[INFO] aspmc: Compilation time:         0.01361083984375
[INFO] aspmc: Preparation time:         0.00011229515075683594
[INFO] aspmc: Counting time:            0.10793685913085938
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2469100952148438
Pre simplification
number of sums: 2401
number of prods: 7921
0.0268610520098365*v_29*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0)) + 0.970299*v_29*(0.92274469442792*v_28*v_30*v_31*(0.96059601*v_11 - 0.96059601*v_12*(v_11 - 1) + 0.96059601*v_13*(v_11 - 1)*(v_12 - 1) - 0.9509900499*v_14*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.9509900499*v_15*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) - 0.0466079748911955*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) - 0.0096059601*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.03940399) + 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))) - 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))
Post simplification
symp_time: 2.6332430839538574
number of sums: 14
number of subs: 66
number of prods: 103
opt_time: 0.5822591781616211
     fun: 4.89
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m7.461s
user	0m6.713s
sys	0m0.577s
Instance 10
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0289382934570312
[INFO] aspmc: Compilation time:         0.013688802719116211
[INFO] aspmc: Preparation time:         0.000110626220703125
[INFO] aspmc: Counting time:            0.10832691192626953
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2535228729248047
Pre simplification
number of sums: 2401
number of prods: 7921
0.0268610520098365*v_29*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) + 0.970299*v_29*(0.93206534790699*v_27*v_28*v_30*v_31*(0.96059601*v_11 - 0.96059601*v_12*(v_11 - 1) + 0.96059601*v_13*(v_11 - 1)*(v_12 - 1) - 0.9509900499*v_14*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.9509900499*v_15*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) - 0.0466079748911955*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) - 0.0096059601*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.03940399) + 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) - 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 2.8606324195861816
number of sums: 20
number of subs: 78
number of prods: 143
opt_time: 1.0005028247833252
     fun: 4.500000000000003
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m8.114s
user	0m7.375s
sys	0m0.564s
Instance 11
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.1757426261901855
[INFO] aspmc: Compilation time:         0.018270254135131836
[INFO] aspmc: Preparation time:         0.0001385211944580078
[INFO] aspmc: Counting time:            0.10966610908508301
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.4076874256134033
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0271323757675116*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) + 0.970299*v_29*(0.93206534790699*v_27*v_28*v_30*v_31*(0.970299*v_10 - 0.970299*v_11*(v_10 - 1) + 0.970299*v_12*(v_10 - 1)*(v_11 - 1) - 0.970299*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1) + 0.96059601*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) - 0.96059601*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0470787625163591*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.029701) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) + 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 4.454569339752197
number of sums: 22
number of subs: 88
number of prods: 154
opt_time: 2.4956626892089844
     fun: 5.89000000004934
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Inequality constraints incompatible'
    nfev: 46
     nit: 6
    njev: 6
  status: 4
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89])

real	0m11.339s
user	0m10.367s
sys	0m0.606s
Instance 12
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0285251140594482
[INFO] aspmc: Compilation time:         0.014389991760253906
[INFO] aspmc: Preparation time:         0.0001266002655029297
[INFO] aspmc: Counting time:            0.1066887378692627
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.245309591293335
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0271323757675116*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) + 0.970299*v_29*(0.941480149401*v_26*v_27*v_28*v_30*v_31*(0.970299*v_10 - 0.970299*v_11*(v_10 - 1) + 0.970299*v_12*(v_10 - 1)*(v_11 - 1) - 0.970299*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1) + 0.96059601*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) - 0.96059601*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0470787625163591*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.029701) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) + 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 4.663444519042969
number of sums: 31
number of subs: 94
number of prods: 170
opt_time: 1.280017375946045
     fun: 5.3999999999999995
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01])

real	0m10.183s
user	0m9.435s
sys	0m0.556s
Instance 13
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.02982234954834
[INFO] aspmc: Compilation time:         0.014257431030273438
[INFO] aspmc: Preparation time:         0.00011944770812988281
[INFO] aspmc: Counting time:            0.10700464248657227
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.246939182281494
Pre simplification
number of sums: 2401
number of prods: 7921
0.0274064401692036*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) - 0.970299*v_29*(0.941480149401*v_26*v_27*v_28*v_30*v_31*(0.9801*v_10*(v_9 - 1) - 0.9801*v_11*(v_10 - 1)*(v_9 - 1) + 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) - 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) + 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.9801*v_9 + 0.0475543055720799*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.0199) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_9 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 6.313470840454102
number of sums: 28
number of subs: 108
number of prods: 182
opt_time: 4.735056638717651
     fun: 6.890000000022038
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 78
     nit: 13
    njev: 9
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89])

real	0m15.264s
user	0m14.491s
sys	0m0.560s
Instance 14
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0288450717926025
[INFO] aspmc: Compilation time:         0.014327526092529297
[INFO] aspmc: Preparation time:         0.00011348724365234375
[INFO] aspmc: Counting time:            0.11213088035583496
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2509756088256836
Pre simplification
number of sums: 2401
number of prods: 7921
0.0274064401692036*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.970299*v_29*(0.9509900499*v_25*v_26*v_27*v_28*v_30*v_31*(0.9801*v_10*(v_9 - 1) - 0.9801*v_11*(v_10 - 1)*(v_9 - 1) + 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) - 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) + 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.9801*v_9 + 0.0475543055720799*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.0199) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 4.476887226104736
number of sums: 37
number of subs: 114
number of prods: 222
opt_time: 1.7976462841033936
     fun: 6.30000000000002
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01])

real	0m10.497s
user	0m9.750s
sys	0m0.551s
Instance 15
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0280261039733887
[INFO] aspmc: Compilation time:         0.013213157653808594
[INFO] aspmc: Preparation time:         0.0001087188720703125
[INFO] aspmc: Counting time:            0.1056373119354248
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.242166757583618
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0276832728981855*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.970299*v_29*(0.9509900499*v_25*v_26*v_27*v_28*v_30*v_31*(-0.9801*v_10*(v_9 - 1) + 0.9801*v_11*(v_10 - 1)*(v_9 - 1) - 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) + 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) - 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.96059601*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.9801*v_9 + 0.02853066209301*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) - 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.0199) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 10.488770723342896
number of sums: 41
number of subs: 132
number of prods: 241
opt_time: 6.525524616241455
     fun: 7.889999999924771
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Inequality constraints incompatible'
    nfev: 79
     nit: 9
    njev: 9
  status: 4
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89])

real	0m21.262s
user	0m20.424s
sys	0m0.609s
Instance 16
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.029409170150757
[INFO] aspmc: Compilation time:         0.01428842544555664
[INFO] aspmc: Preparation time:         0.00010561943054199219
[INFO] aspmc: Counting time:            0.10863709449768066
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2486371994018555
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0276832728981855*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.970299*v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(-0.9801*v_10*(v_9 - 1) + 0.9801*v_11*(v_10 - 1)*(v_9 - 1) - 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) + 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) - 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.96059601*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.9801*v_9 + 0.02853066209301*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) - 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.0199) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 17.84870147705078
number of sums: 47
number of subs: 138
number of prods: 281
opt_time: 2.452016592025757
     fun: 7.199999999999998
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01])

real	0m24.672s
user	0m23.713s
sys	0m0.645s
Instance 17
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028357982635498
[INFO] aspmc: Compilation time:         0.014449357986450195
[INFO] aspmc: Preparation time:         0.00011682510375976562
[INFO] aspmc: Counting time:            0.10354065895080566
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.243206262588501
Pre simplification
number of sums: 2401
number of prods: 7921
0.0279629019173591*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.970299*v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.028818850599*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 34.99597525596619
number of sums: 48
number of subs: 152
number of prods: 298
opt_time: 8.85062575340271
     fun: 8.889999999972616
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 79
     nit: 13
    njev: 9
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m48.170s
user	0m47.211s
sys	0m0.683s
Instance 18
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0285556316375732
[INFO] aspmc: Compilation time:         0.014284372329711914
[INFO] aspmc: Preparation time:         0.00011610984802246094
[INFO] aspmc: Counting time:            0.10632681846618652
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2444393634796143
Pre simplification
number of sums: 2401
number of prods: 7921
0.0093206534790699*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.028818850599*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.00941480149401*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.00941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 43.39545822143555
number of sums: 88
number of subs: 240
number of prods: 518
opt_time: 4.5302958488464355
     fun: 8.100000000000028
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m52.230s
user	0m51.272s
sys	0m0.683s
Instance 19
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0283377170562744
[INFO] aspmc: Compilation time:         0.013580083847045898
[INFO] aspmc: Preparation time:         0.00012969970703125
[INFO] aspmc: Counting time:            0.10564541816711426
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.242806911468506
Pre simplification
number of sums: 2401
number of prods: 7921
-0.00941480149401*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.009509900499*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.009509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 84.11101126670837
number of sums: 91
number of subs: 256
number of prods: 536
opt_time: 4.933943033218384
     fun: 9.489999999975359
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 2
     nit: 6
    njev: 2
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	1m33.592s
user	1m32.277s
sys	0m0.804s
Instance 20
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0300326347351074
[INFO] aspmc: Compilation time:         0.015151739120483398
[INFO] aspmc: Preparation time:         0.00011777877807617188
[INFO] aspmc: Counting time:            0.10543704032897949
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2524101734161377
Pre simplification
number of sums: 2401
number of prods: 7921
-0.00941480149401*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.009509900499*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.009509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 47.3860719203949
number of sums: 103
number of subs: 268
number of prods: 639
opt_time: 5.701541900634766
     fun: 8.999999999999998
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m57.444s
user	0m56.467s
sys	0m0.674s
Instance 21
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028829574584961
[INFO] aspmc: Compilation time:         0.014529705047607422
[INFO] aspmc: Preparation time:         0.0001125335693359375
[INFO] aspmc: Counting time:            0.10780739784240723
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.246901512145996
Pre simplification
number of sums: 2401
number of prods: 7921
0.009509900499*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 - 0.9801*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.0096059601*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 75.93604254722595
number of sums: 101
number of subs: 278
number of prods: 649
opt_time: 17.4968900680542
     fun: 10.484506872343628
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 62
     nit: 12
    njev: 8
  status: 8
 success: False
       x: array([0.89      , 0.01      , 0.89      , 0.01      , 0.89      ,
       0.01      , 0.89      , 0.01      , 0.89      , 0.10908448,
       0.89      , 0.10908448, 0.89      , 0.10908448, 0.89      ,
       0.10908448, 0.89      , 0.10908448, 0.89      , 0.10908448,
       0.89      ])

real	1m37.964s
user	1m36.674s
sys	0m0.795s
Instance 22
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028430700302124
[INFO] aspmc: Compilation time:         0.014753103256225586
[INFO] aspmc: Preparation time:         0.00011110305786132812
[INFO] aspmc: Counting time:            0.10549569129943848
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.254110097885132
Pre simplification
number of sums: 2401
number of prods: 7921
0.0096059601*v_21*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.99*v_21*(v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 - 0.9801*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 95.83520269393921
number of sums: 85
number of subs: 246
number of prods: 558
opt_time: 9.312700033187866
     fun: 11.0
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 3
     nit: 7
    njev: 3
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.11, 0.89, 0.01, 0.99,
       0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01])

real	1m49.583s
user	1m48.441s
sys	0m0.793s
Instance 23
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0301733016967773
[INFO] aspmc: Compilation time:         0.014623880386352539
[INFO] aspmc: Preparation time:         0.00010728836059570312
[INFO] aspmc: Counting time:            0.10586285591125488
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2467124462127686
Pre simplification
number of sums: 2401
number of prods: 7921
-0.00970299*v_21*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.96059601*v_21*(v_23*(v_29*(v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.99*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 192.4698028564453
number of sums: 87
number of subs: 256
number of prods: 566
opt_time: 22.824851274490356
     fun: 11.383133588779776
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 81
     nit: 15
    njev: 11
  status: 8
 success: False
       x: array([0.89     , 0.01     , 0.89     , 0.01     , 0.89     , 0.01     ,
       0.89     , 0.01     , 0.89     , 0.01     , 0.89     , 0.1088556,
       0.89     , 0.1088556, 0.89     , 0.1088556, 0.89     , 0.1088556,
       0.89     , 0.1088556, 0.89     , 0.1088556, 0.89     ])

real	3m40.103s
user	3m38.133s
sys	0m1.154s
Instance 24
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.029343843460083
[INFO] aspmc: Compilation time:         0.015098333358764648
[INFO] aspmc: Preparation time:         0.00011563301086425781
[INFO] aspmc: Counting time:            0.10154509544372559
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2431893348693848
Pre simplification
number of sums: 2401
number of prods: 7921
0.970299*v_20*(v_21*(v_23*(v_29*(v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.99*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_20 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 166.71468472480774
number of sums: 87
number of subs: 256
number of prods: 566
opt_time: 12.182946920394897
     fun: 11.999999999978046
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.11, 0.89, 0.11, 0.89,
       0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01,
       0.99, 0.01])

real	3m3.670s
user	3m2.062s
sys	0m0.956s
Instance 25
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0289556980133057
[INFO] aspmc: Compilation time:         0.014305353164672852
[INFO] aspmc: Preparation time:         0.000110626220703125
[INFO] aspmc: Counting time:            0.10460591316223145
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2454988956451416
Pre simplification
number of sums: 2401
number of prods: 7921
-v_20*(v_21*(v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(1.0*v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_3*(v_7 - 1)*(v_9 - 1) + 1.0*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_7 + 1.0*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_9*(v_7 - 1) - 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - (v_21 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)))
Post simplification
symp_time: 332.05419301986694
number of sums: 100
number of subs: 298
number of prods: 668
opt_time: 18.358641147613525
     fun: 12.123833517713548
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 57
     nit: 11
    njev: 7
  status: 8
 success: False
       x: array([0.89     , 0.01     , 0.89     , 0.01     , 0.89     , 0.01     ,
       0.89     , 0.01     , 0.89     , 0.01     , 0.89     , 0.01     ,
       0.89     , 0.0967667, 0.89     , 0.0967667, 0.89     , 0.0967667,
       0.89     , 0.0967667, 0.89     , 0.0967667, 0.89     , 0.01     ,
       0.89     ])

real	5m55.369s
user	5m53.047s
sys	0m1.338s
Instance 26
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0292303562164307
[INFO] aspmc: Compilation time:         0.014788627624511719
[INFO] aspmc: Preparation time:         0.00011992454528808594
[INFO] aspmc: Counting time:            0.10282063484191895
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2440099716186523
Pre simplification
number of sums: 2401
number of prods: 7921
-0.9801*v_20*(v_21*(v_23*(v_29*(v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(1.0*v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_3*(v_7 - 1)*(v_9 - 1) + 1.0*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_7 + 1.0*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_9*(v_7 - 1) - 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - (v_21 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)))
Post simplification
symp_time: 345.65364503860474
number of sums: 106
number of subs: 304
number of prods: 725
opt_time: 27.567219018936157
     fun: 12.799999999950893
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 70
     nit: 14
    njev: 10
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01,
       0.99, 0.01, 0.89, 0.01])

real	6m18.224s
user	6m15.837s
sys	0m1.451s
Instance 27
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028386116027832
[INFO] aspmc: Compilation time:         0.013602972030639648
[INFO] aspmc: Preparation time:         0.00010776519775390625
[INFO] aspmc: Counting time:            0.10399532318115234
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2423288822174072
Pre simplification
number of sums: 2401
number of prods: 7921
v_20*(v_21*(v_23*(v_29*(0.9801*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.01*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*(v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 688.6987161636353
number of sums: 91
number of subs: 290
number of prods: 636
opt_time: 19.790462255477905
     fun: 12.590000000111006
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 89
     nit: 14
    njev: 10
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01,
       0.89, 0.01, 0.89, 0.01, 0.89])

real	11m53.731s
user	11m49.676s
sys	0m2.586s
Instance 28
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028881311416626
[INFO] aspmc: Compilation time:         0.014625787734985352
[INFO] aspmc: Preparation time:         0.00010442733764648438
[INFO] aspmc: Counting time:            0.10095453262329102
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.239922523498535
Pre simplification
number of sums: 2401
number of prods: 7921
0.99*v_20*(v_21*(v_23*(v_29*(v_18*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.01*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*(v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 712.8122727870941
number of sums: 101
number of subs: 300
number of prods: 633
opt_time: 24.057019233703613
     fun: 12.79999999999831
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 105
     nit: 16
    njev: 12
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01,
       0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	12m22.377s
user	12m17.991s
sys	0m2.447s
Instance 29
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0295307636260986
[INFO] aspmc: Compilation time:         0.014861822128295898
[INFO] aspmc: Preparation time:         0.00011229515075683594
[INFO] aspmc: Counting time:            0.1071474552154541
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2484288215637207
Pre simplification
number of sums: 2401
number of prods: 7921
v_20*(v_21*(v_23*(v_29*(0.99*v_18*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(v_1*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - (v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(v_18*v_26*v_30*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 - 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) + 0.01*v_22*v_25*v_27*v_28 - 1.0*v_25*v_27*v_28*(v_22 - 1) - 1.0*v_25*v_27*(v_28 - 1) - 1.0*v_25*(v_27 - 1) - 1.0*v_25 + 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1) + (-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1)*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) + 0.01*v_22*v_25*v_27*v_28 - 1.0*v_25*v_27*v_28*(v_22 - 1) - 1.0*v_25*v_27*(v_28 - 1) - 1.0*v_25*(v_27 - 1) - 1.0*v_25 + 1.0)) - (v_21 - 1)*(-v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)))
Post simplification
symp_time: 1373.076644897461
number of sums: 107
number of subs: 346
number of prods: 726
opt_time: 23.9466335773468
     fun: 13.490000000000771
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 123
     nit: 17
    njev: 13
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01,
       0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89])

real	23m23.596s
user	23m15.711s
sys	0m5.135s
Instance 30
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0293102264404297
[INFO] aspmc: Compilation time:         0.015400171279907227
[INFO] aspmc: Preparation time:         0.00011181831359863281
[INFO] aspmc: Counting time:            0.10171866416931152
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2451694011688232
Pre simplification
number of sums: 2401
number of prods: 7921
v_20*(v_21*(v_23*(v_29*(v_17*v_18*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(v_1*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - (v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1) + v_18*v_26*v_30*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 - v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - v_17*v_22*v_25*v_27*v_28*(v_31 - 1) - v_22*v_25*v_27*v_28*(v_17 - 1) - v_25*v_27*v_28*(v_22 - 1) - v_25*v_27*(v_28 - 1) - v_25*(v_27 - 1) - v_25 + 1) + (-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1)*(-v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - v_17*v_22*v_25*v_27*v_28*(v_31 - 1) - v_22*v_25*v_27*v_28*(v_17 - 1) - v_25*v_27*v_28*(v_22 - 1) - v_25*v_27*(v_28 - 1) - v_25*(v_27 - 1) - v_25 + 1)) - (v_21 - 1)*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) + (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1)))
Post simplification
symp_time: 775.4619898796082
number of sums: 115
number of subs: 350
number of prods: 678
opt_time: 12.222378492355347
     fun: 13.500000000001272
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 40
     nit: 11
    njev: 7
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01,
       0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	13m12.685s
user	13m8.824s
sys	0m2.022s
Ended at: 
Wed Dec 13 18:49:18 CET 2023

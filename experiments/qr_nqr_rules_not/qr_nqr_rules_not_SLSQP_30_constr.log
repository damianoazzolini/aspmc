Started at: 
Wed Dec 13 17:19:18 CET 2023
Instance 2
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0277178287506104
[INFO] aspmc: Compilation time:         0.01343846321105957
[INFO] aspmc: Preparation time:         0.00011515617370605469
[INFO] aspmc: Counting time:            0.09992098808288574
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2440524101257324
Pre simplification
number of sums: 2401
number of prods: 7921
-0.868745812768978*v_15 + 0.868745812768978*v_31*(0.868745812768978*v_15 + 0.131254187231022) + 0.868745812768978
Post simplification
symp_time: 0.9720463752746582
number of sums: 3
number of subs: 1
number of prods: 4
opt_time: 0.0256195068359375
     fun: 0.9000000000000002
     jac: array([1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01])

real	0m5.395s
user	0m4.731s
sys	0m0.523s
Instance 3
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0295238494873047
[INFO] aspmc: Compilation time:         0.013849496841430664
[INFO] aspmc: Preparation time:         0.00011205673217773438
[INFO] aspmc: Counting time:            0.09682846069335938
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2361245155334473
Pre simplification
number of sums: 2401
number of prods: 7921
0.868745812768978*v_31*(0.92274469442792*v_14 - 0.92274469442792*v_15*(v_14 - 1) + 0.0452236714289521*(v_14 - 1)*(v_15 - 1) + 0.0772553055720799) + 0.877521022998968*(v_14 - 1)*(v_15 - 1)
Post simplification
symp_time: 1.1235761642456055
number of sums: 3
number of subs: 6
number of prods: 9
opt_time: 0.15117287635803223
     fun: 1.8900000000000001
     jac: array([1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 17
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89])

real	0m5.432s
user	0m4.796s
sys	0m0.497s
Instance 4
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0277154445648193
[INFO] aspmc: Compilation time:         0.014580965042114258
[INFO] aspmc: Preparation time:         0.00010633468627929688
[INFO] aspmc: Counting time:            0.09630203247070312
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2327706813812256
Pre simplification
number of sums: 2401
number of prods: 7921
-0.770043145805155*v_14*v_15*v_30*v_31 + 0.877521022998968*v_14*v_15 + 0.770043145805155*v_14*v_30*v_31 - 0.877521022998968*v_14 + 0.770043145805155*v_15*v_30*v_31 - 0.877521022998968*v_15 + 0.107477877193813*v_30*v_31 + 0.877521022998968
Post simplification
symp_time: 1.1674015522003174
number of sums: 5
number of subs: 3
number of prods: 16
opt_time: 0.12114071846008301
     fun: 1.8000000000000007
     jac: array([1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01])

real	0m5.452s
user	0m4.802s
sys	0m0.509s
Instance 5
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.030238628387451
[INFO] aspmc: Compilation time:         0.013486146926879883
[INFO] aspmc: Preparation time:         0.00010347366333007812
[INFO] aspmc: Counting time:            0.09430694580078125
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2321343421936035
Pre simplification
number of sums: 2401
number of prods: 7921
0.877521022998968*v_30*v_31*(0.93206534790699*v_13 - 0.93206534790699*v_14*(v_13 - 1) + 0.93206534790699*v_15*(v_13 - 1)*(v_14 - 1) - 0.0456804761908607*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.06793465209301) - 0.886384871716129*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))
Post simplification
symp_time: 1.2801706790924072
number of sums: 3
number of subs: 16
number of prods: 23
opt_time: 1.026578426361084
     fun: 2.8899999999999992
     jac: array([1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 89
     nit: 15
    njev: 11
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89])

real	0m6.460s
user	0m5.782s
sys	0m0.525s
Instance 6
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0279879570007324
[INFO] aspmc: Compilation time:         0.013704538345336914
[INFO] aspmc: Preparation time:         0.00012063980102539062
[INFO] aspmc: Counting time:            0.09302759170532227
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2294833660125732
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0263265170748407*v_29*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0)) + 0.970299*v_29*(0.913517247483641*v_30*v_31*(0.93206534790699*v_13 - 0.93206534790699*v_14*(v_13 - 1) + 0.93206534790699*v_15*(v_13 - 1)*(v_14 - 1) - 0.0456804761908607*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.06793465209301) - 0.886384871716129*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))) + 0.886384871716129*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))
Post simplification
symp_time: 1.4822399616241455
number of sums: 7
number of subs: 32
number of prods: 49
opt_time: 0.45321083068847656
     fun: 2.700000000000001
     jac: array([1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m6.081s
user	0m5.464s
sys	0m0.476s
Instance 7
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0279295444488525
[INFO] aspmc: Compilation time:         0.01367640495300293
[INFO] aspmc: Preparation time:         0.000110626220703125
[INFO] aspmc: Counting time:            0.10178565979003906
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.238814353942871
Pre simplification
number of sums: 2401
number of prods: 7921
0.0265924414897381*v_29*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0)) + 0.970299*v_29*(0.913517247483641*v_30*v_31*(0.9509900499*v_12 - 0.9509900499*v_13*(v_12 - 1) + 0.941480149401*v_14*(v_12 - 1)*(v_13 - 1) - 0.941480149401*v_15*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0461418951422835*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.009509900499*(v_12 - 1)*(v_13 - 1) + 0.0490099501) + 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))) - 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9801*v_30 - 0.93206534790699*v_31*(0.9801*v_30 - 1.0) + (0.9801*v_30 - 1.0)*(0.93206534790699*v_31 - 1.0))
Post simplification
symp_time: 1.5864596366882324
number of sums: 9
number of subs: 40
number of prods: 59
opt_time: 0.4534907341003418
     fun: 3.89
     jac: array([1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m6.203s
user	0m5.586s
sys	0m0.480s
Instance 8
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0278375148773193
[INFO] aspmc: Compilation time:         0.01324009895324707
[INFO] aspmc: Preparation time:         0.0001125335693359375
[INFO] aspmc: Counting time:            0.0941312313079834
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2300102710723877
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0265924414897381*v_29*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0)) + 0.970299*v_29*(0.92274469442792*v_28*v_30*v_31*(0.9509900499*v_12 - 0.9509900499*v_13*(v_12 - 1) + 0.941480149401*v_14*(v_12 - 1)*(v_13 - 1) - 0.941480149401*v_15*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0461418951422835*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.009509900499*(v_12 - 1)*(v_13 - 1) + 0.0490099501) - 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))) + 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))
Post simplification
symp_time: 1.9632337093353271
number of sums: 15
number of subs: 56
number of prods: 93
opt_time: 1.0570521354675293
     fun: 3.6
     jac: array([1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m7.507s
user	0m6.579s
sys	0m0.505s
Instance 9
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028090238571167
[INFO] aspmc: Compilation time:         0.01315760612487793
[INFO] aspmc: Preparation time:         0.00010919570922851562
[INFO] aspmc: Counting time:            0.10078644752502441
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.238487482070923
Pre simplification
number of sums: 2401
number of prods: 7921
0.0268610520098365*v_29*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0)) + 0.970299*v_29*(0.92274469442792*v_28*v_30*v_31*(0.96059601*v_11 - 0.96059601*v_12*(v_11 - 1) + 0.96059601*v_13*(v_11 - 1)*(v_12 - 1) - 0.9509900499*v_14*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.9509900499*v_15*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) - 0.0466079748911955*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) - 0.0096059601*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.03940399) + 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))) - 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.941480149401*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.96059601*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0) + (0.9801*v_30 - 1.0)*(0.019115860599*v_28*v_31 - 0.96059601*v_28*(v_31 - 1) - 0.96059601*v_28 + 1.0))
Post simplification
symp_time: 2.5726211071014404
number of sums: 14
number of subs: 66
number of prods: 103
opt_time: 0.8970773220062256
     fun: 4.89
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m7.765s
user	0m7.063s
sys	0m0.558s
Instance 10
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0275468826293945
[INFO] aspmc: Compilation time:         0.013933658599853516
[INFO] aspmc: Preparation time:         0.0001049041748046875
[INFO] aspmc: Counting time:            0.09387826919555664
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.228726625442505
Pre simplification
number of sums: 2401
number of prods: 7921
0.0268610520098365*v_29*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) + 0.970299*v_29*(0.93206534790699*v_27*v_28*v_30*v_31*(0.96059601*v_11 - 0.96059601*v_12*(v_11 - 1) + 0.96059601*v_13*(v_11 - 1)*(v_12 - 1) - 0.9509900499*v_14*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.9509900499*v_15*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) - 0.0466079748911955*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) - 0.0096059601*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.03940399) + 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) - 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 2.7793221473693848
number of sums: 20
number of subs: 78
number of prods: 143
opt_time: 1.9175336360931396
     fun: 4.500000000000003
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m8.877s
user	0m8.197s
sys	0m0.528s
Instance 11
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.027650833129883
[INFO] aspmc: Compilation time:         0.014720916748046875
[INFO] aspmc: Preparation time:         0.00011849403381347656
[INFO] aspmc: Counting time:            0.09581923484802246
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2339110374450684
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0271323757675116*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) + 0.970299*v_29*(0.93206534790699*v_27*v_28*v_30*v_31*(0.970299*v_10 - 0.970299*v_11*(v_10 - 1) + 0.970299*v_12*(v_10 - 1)*(v_11 - 1) - 0.970299*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1) + 0.96059601*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) - 0.96059601*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0470787625163591*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.029701) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) + 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(0.9509900499*v_27*v_28*v_31*(0.9801*v_30 - 1.0) - 0.9801*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + (0.9801*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 4.352625370025635
number of sums: 22
number of subs: 88
number of prods: 154
opt_time: 1.4735331535339355
     fun: 5.89
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m10.030s
user	0m9.311s
sys	0m0.546s
Instance 12
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0278615951538086
[INFO] aspmc: Compilation time:         0.013544797897338867
[INFO] aspmc: Preparation time:         0.000118255615234375
[INFO] aspmc: Counting time:            0.09538125991821289
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.234717607498169
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0271323757675116*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) + 0.970299*v_29*(0.941480149401*v_26*v_27*v_28*v_30*v_31*(0.970299*v_10 - 0.970299*v_11*(v_10 - 1) + 0.970299*v_12*(v_10 - 1)*(v_11 - 1) - 0.970299*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1) + 0.96059601*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) - 0.96059601*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1) + 0.0470787625163591*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1) + 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1) + 0.029701) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) + 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 4.434371709823608
number of sums: 31
number of subs: 94
number of prods: 170
opt_time: 3.0430073738098145
     fun: 5.3999999999999995
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01])

real	0m11.679s
user	0m11.004s
sys	0m0.510s
Instance 13
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.027815818786621
[INFO] aspmc: Compilation time:         0.014656543731689453
[INFO] aspmc: Preparation time:         0.0001068115234375
[INFO] aspmc: Counting time:            0.09453344345092773
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2322962284088135
Pre simplification
number of sums: 2401
number of prods: 7921
0.0274064401692036*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0)) - 0.970299*v_29*(0.941480149401*v_26*v_27*v_28*v_30*v_31*(0.9801*v_10*(v_9 - 1) - 0.9801*v_11*(v_10 - 1)*(v_9 - 1) + 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) - 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) + 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.9801*v_9 + 0.0475543055720799*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.0199) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_9 - 1)*(-0.99*v_26*v_30*(0.970299*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0) + 0.9509900499*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.0193089501*v_27*v_28*v_31 - 0.970299*v_27*v_28*(v_31 - 1) + 0.019701*v_27*v_28 - 0.99*v_27*(v_28 - 1) - 0.99*v_27 + 1.0))
Post simplification
symp_time: 6.045413255691528
number of sums: 28
number of subs: 108
number of prods: 182
opt_time: 24.635371685028076
     fun: 6.889999999999934
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 151
     nit: 19
    njev: 15
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89])

real	0m34.875s
user	0m34.107s
sys	0m0.567s
Instance 14
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0274853706359863
[INFO] aspmc: Compilation time:         0.014095544815063477
[INFO] aspmc: Preparation time:         0.00010442733764648438
[INFO] aspmc: Counting time:            0.09410691261291504
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.231165885925293
Pre simplification
number of sums: 2401
number of prods: 7921
0.0274064401692036*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.970299*v_29*(0.9509900499*v_25*v_26*v_27*v_28*v_30*v_31*(0.9801*v_10*(v_9 - 1) - 0.9801*v_11*(v_10 - 1)*(v_9 - 1) + 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) - 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) + 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.9801*v_9 + 0.0475543055720799*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) - 0.0199) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 4.382611989974976
number of sums: 37
number of subs: 114
number of prods: 222
opt_time: 4.709161281585693
     fun: 6.30000000000002
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01])

real	0m13.267s
user	0m12.585s
sys	0m0.510s
Instance 15
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0287680625915527
[INFO] aspmc: Compilation time:         0.015810728073120117
[INFO] aspmc: Preparation time:         0.00011491775512695312
[INFO] aspmc: Counting time:            0.0922083854675293
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.231896162033081
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0276832728981855*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.970299*v_29*(0.9509900499*v_25*v_26*v_27*v_28*v_30*v_31*(-0.9801*v_10*(v_9 - 1) + 0.9801*v_11*(v_10 - 1)*(v_9 - 1) - 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) + 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) - 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.96059601*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.9801*v_9 + 0.02853066209301*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) - 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.0199) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.01950399*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 9.847453355789185
number of sums: 41
number of subs: 132
number of prods: 241
opt_time: 30.009035110473633
     fun: 7.88999999999999
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 112
     nit: 16
    njev: 12
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89])

real	0m44.162s
user	0m43.282s
sys	0m0.583s
Instance 16
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0281333923339844
[INFO] aspmc: Compilation time:         0.014429092407226562
[INFO] aspmc: Preparation time:         0.00010800361633300781
[INFO] aspmc: Counting time:            0.09315061569213867
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2309038639068604
Pre simplification
number of sums: 2401
number of prods: 7921
-0.0276832728981855*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.970299*v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(-0.9801*v_10*(v_9 - 1) + 0.9801*v_11*(v_10 - 1)*(v_9 - 1) - 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) + 0.9801*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) - 0.970299*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.970299*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_9 - 1) - 0.96059601*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) + 0.9801*v_9 + 0.02853066209301*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_9 - 1) - 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1) + 0.0199) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 17.623151540756226
number of sums: 47
number of subs: 138
number of prods: 281
opt_time: 6.831912517547607
     fun: 7.199999999999998
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01])

real	0m28.695s
user	0m27.922s
sys	0m0.566s
Instance 17
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0277349948883057
[INFO] aspmc: Compilation time:         0.013807296752929688
[INFO] aspmc: Preparation time:         0.00011348724365234375
[INFO] aspmc: Counting time:            0.09563660621643066
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2317256927490234
Pre simplification
number of sums: 2401
number of prods: 7921
0.0279629019173591*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.970299*v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.028818850599*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 34.292187452316284
number of sums: 48
number of subs: 152
number of prods: 298
opt_time: 25.627199411392212
     fun: 8.89
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 65
     nit: 11
    njev: 7
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	1m4.201s
user	1m3.330s
sys	0m0.596s
Instance 18
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028557538986206
[INFO] aspmc: Compilation time:         0.01515817642211914
[INFO] aspmc: Preparation time:         0.00011444091796875
[INFO] aspmc: Counting time:            0.09564447402954102
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2360424995422363
Pre simplification
number of sums: 2401
number of prods: 7921
0.0093206534790699*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.028818850599*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.00941480149401*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.00941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 41.762930393218994
number of sums: 88
number of subs: 240
number of prods: 518
opt_time: 10.875367403030396
     fun: 8.100000000000092
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m56.935s
user	0m56.042s
sys	0m0.602s
Instance 19
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.02781343460083
[INFO] aspmc: Compilation time:         0.014235973358154297
[INFO] aspmc: Preparation time:         0.00011157989501953125
[INFO] aspmc: Counting time:            0.09139060974121094
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.4937961101531982
Pre simplification
number of sums: 2401
number of prods: 7921
-0.00941480149401*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.96059601*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.009509900499*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.009509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.970299*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.9801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.009801*v_24*v_25*v_27*v_28*v_31 + 0.9801*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.9801*v_25*v_27*v_28*(v_31 - 1) - 0.0199*v_25*v_27*v_28 + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 81.1358745098114
number of sums: 91
number of subs: 256
number of prods: 536
opt_time: 7.23382043838501
     fun: 9.89
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	1m33.155s
user	1m31.800s
sys	0m0.643s
Instance 20
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0278639793395996
[INFO] aspmc: Compilation time:         0.014015436172485352
[INFO] aspmc: Preparation time:         0.00010657310485839844
[INFO] aspmc: Counting time:            0.0902397632598877
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2263896465301514
Pre simplification
number of sums: 2401
number of prods: 7921
-0.00941480149401*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.970299*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.009509900499*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.009509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 47.15285778045654
number of sums: 103
number of subs: 268
number of prods: 639
opt_time: 14.582998991012573
     fun: 8.999999999999998
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	1m5.992s
user	1m5.154s
sys	0m0.601s
Instance 21
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0290184020996094
[INFO] aspmc: Compilation time:         0.014940023422241211
[INFO] aspmc: Preparation time:         0.00011134147644042969
[INFO] aspmc: Counting time:            0.09372711181640625
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.233325719833374
Pre simplification
number of sums: 2401
number of prods: 7921
0.009509900499*v_23*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.9801*v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 - 0.9801*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.0096059601*v_29*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 74.07984566688538
number of sums: 101
number of subs: 278
number of prods: 649
opt_time: 65.91284894943237
     fun: 10.889999999999999
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 83
     nit: 13
    njev: 9
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	2m24.543s
user	2m23.322s
sys	0m0.676s
Instance 22
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0279979705810547
[INFO] aspmc: Compilation time:         0.014445304870605469
[INFO] aspmc: Preparation time:         0.00011324882507324219
[INFO] aspmc: Counting time:            0.09271383285522461
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2302587032318115
Pre simplification
number of sums: 2401
number of prods: 7921
0.0096059601*v_21*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.99*v_21*(v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.9801*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_7 - 1)*(v_9 - 1) + 0.9801*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 - 0.9801*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 93.87737560272217
number of sums: 85
number of subs: 246
number of prods: 558
opt_time: 10.13100814819336
     fun: 11.0
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11])

real	1m48.392s
user	1m47.433s
sys	0m0.647s
Instance 23
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0293123722076416
[INFO] aspmc: Compilation time:         0.01505279541015625
[INFO] aspmc: Preparation time:         0.00011348724365234375
[INFO] aspmc: Counting time:            0.09411358833312988
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.234217882156372
Pre simplification
number of sums: 2401
number of prods: 7921
-0.00970299*v_21*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) + 0.96059601*v_21*(v_23*(v_29*(v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.99*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 189.8285629749298
number of sums: 87
number of subs: 256
number of prods: 566
opt_time: 118.20746159553528
     fun: 11.889999999999999
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 118
     nit: 17
    njev: 13
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89])

real	5m12.799s
user	5m11.074s
sys	0m0.801s
Instance 24
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.027909278869629
[INFO] aspmc: Compilation time:         0.014256477355957031
[INFO] aspmc: Preparation time:         0.00010895729064941406
[INFO] aspmc: Counting time:            0.09536957740783691
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.23258900642395
Pre simplification
number of sums: 2401
number of prods: 7921
0.970299*v_20*(v_21*(v_23*(v_29*(v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.99*v_10*(v_7 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 0.99*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_9 - 1) - 0.99*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_7 + 0.99*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_9*(v_7 - 1) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_7 - 1)*(v_9 - 1)) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_20 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 165.16211652755737
number of sums: 87
number of subs: 256
number of prods: 566
opt_time: 73.05624079704285
     fun: 11.999999999999952
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 58
     nit: 11
    njev: 7
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11])

real	4m2.730s
user	4m1.374s
sys	0m0.724s
Instance 25
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.02827787399292
[INFO] aspmc: Compilation time:         0.014775276184082031
[INFO] aspmc: Preparation time:         0.00010848045349121094
[INFO] aspmc: Counting time:            0.09273695945739746
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2316462993621826
Pre simplification
number of sums: 2401
number of prods: 7921
-v_20*(v_21*(v_23*(v_29*(0.970299*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(1.0*v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_3*(v_7 - 1)*(v_9 - 1) + 1.0*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_7 + 1.0*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_9*(v_7 - 1) - 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - (v_21 - 1)*(0.9801*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(-0.0099*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)))
Post simplification
symp_time: 335.0313184261322
number of sums: 100
number of subs: 298
number of prods: 668
opt_time: 93.20570540428162
     fun: 12.88999999999989
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 74
     nit: 12
    njev: 8
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11, 0.89])

real	7m13.193s
user	7m11.069s
sys	0m1.008s
Instance 26
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028925895690918
[INFO] aspmc: Compilation time:         0.015537023544311523
[INFO] aspmc: Preparation time:         0.00011610984802246094
[INFO] aspmc: Counting time:            0.09209871292114258
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2320897579193115
Pre simplification
number of sums: 2401
number of prods: 7921
-0.9801*v_20*(v_21*(v_23*(v_29*(v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(1.0*v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_3*(v_7 - 1)*(v_9 - 1) + 1.0*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - 1.0*v_7 + 1.0*v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + 1.0*v_9*(v_7 - 1) - 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(0.99*v_6 + 0.01)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)) - (v_21 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)))
Post simplification
symp_time: 345.6733088493347
number of sums: 106
number of subs: 304
number of prods: 725
opt_time: 15.840264320373535
     fun: 13.0
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11, 0.89, 0.11])

real	6m6.479s
user	6m4.636s
sys	0m1.003s
Instance 27
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.028373956680298
[INFO] aspmc: Compilation time:         0.014501810073852539
[INFO] aspmc: Preparation time:         0.00011563301086425781
[INFO] aspmc: Counting time:            0.09972333908081055
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.237403631210327
Pre simplification
number of sums: 2401
number of prods: 7921
v_20*(v_21*(v_23*(v_29*(0.9801*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.01*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*(v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0) + 0.99*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - (0.99*v_30*(v_26 - 1) + 0.99*v_30 - 1.0)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 670.1599357128143
number of sums: 91
number of subs: 290
number of prods: 636
opt_time: 55.988484621047974
     fun: 13.889999999999926
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 32
     nit: 8
    njev: 4
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11, 0.89, 0.11, 0.89])

real	12m11.622s
user	12m8.583s
sys	0m1.885s
Instance 28
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0290727615356445
[INFO] aspmc: Compilation time:         0.01467585563659668
[INFO] aspmc: Preparation time:         0.00011134147644042969
[INFO] aspmc: Counting time:            0.09305286407470703
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2451212406158447
Pre simplification
number of sums: 2401
number of prods: 7921
0.99*v_20*(v_21*(v_23*(v_29*(v_18*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(0.01*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*(v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))
Post simplification
symp_time: 689.4554755687714
number of sums: 101
number of subs: 300
number of prods: 633
opt_time: 148.32778453826904
     fun: 14.0
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 96
     nit: 14
    njev: 10
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11, 0.89, 0.11, 0.89, 0.11])

real	14m3.336s
user	13m59.966s
sys	0m1.868s
Instance 29
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.029031753540039
[INFO] aspmc: Compilation time:         0.015579462051391602
[INFO] aspmc: Preparation time:         0.00011301040649414062
[INFO] aspmc: Counting time:            0.09256458282470703
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2332699298858643
Pre simplification
number of sums: 2401
number of prods: 7921
v_20*(v_21*(v_23*(v_29*(0.99*v_18*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(v_1*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - (v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(v_18*v_26*v_30*(0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 - 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) + 0.01*v_22*v_25*v_27*v_28 - 1.0*v_25*v_27*v_28*(v_22 - 1) - 1.0*v_25*v_27*(v_28 - 1) - 1.0*v_25*(v_27 - 1) - 1.0*v_25 + 1.0) + 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1) + (-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1)*(-0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) + 0.01*v_22*v_25*v_27*v_28 - 1.0*v_25*v_27*v_28*(v_22 - 1) - 1.0*v_25*v_27*(v_28 - 1) - 1.0*v_25*(v_27 - 1) - 1.0*v_25 + 1.0)) - (v_21 - 1)*(-v_18*v_26*v_30*(-0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + 0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0) - 0.99*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(0.99*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + 0.99*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + 0.99*v_22*v_25*v_27*v_28*(v_31 - 1) - 0.01*v_22*v_25*v_27*v_28 + 1.0*v_25*v_27*v_28*(v_22 - 1) + 1.0*v_25*v_27*(v_28 - 1) + 1.0*v_25*(v_27 - 1) + 1.0*v_25 - 1.0)))
Post simplification
symp_time: 1356.0745966434479
number of sums: 107
number of subs: 346
number of prods: 726
opt_time: 17.989850997924805
     fun: 14.889999999999999
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	23m0.606s
user	22m53.992s
sys	0m4.080s
Instance 30
[INFO] aspmc: Tree Decomposition #bags: 33 unfolded treewidth: 3 #vertices: 35
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 47 treewidth: 10 #vertices: 76
[INFO] aspmc: Dtree time:               2.0290746688842773
[INFO] aspmc: Compilation time:         0.014318466186523438
[INFO] aspmc: Preparation time:         0.00010919570922851562
[INFO] aspmc: Counting time:            0.08900761604309082
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., 0.99::a25., 0.01::a26., 0.99::a27., 0.01::a28., 0.99::a29., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24,not a26,not a28., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,a25,a27,a29,not qr., query(qr).]
tracc
nnf_construction_time: 3.2266247272491455
Pre simplification
number of sums: 2401
number of prods: 7921
v_20*(v_21*(v_23*(v_29*(v_17*v_18*v_19*v_22*v_24*v_25*v_26*v_27*v_28*v_30*v_31*(v_1*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - v_6*(v_2 - 1))*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - (v_2 - v_6*(v_2 - 1) + (v_2 - 1)*(v_6 - 1))*(v_10*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_13*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_14*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) + v_15*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_3*(v_7 - 1)*(v_9 - 1) + v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_7 - 1)*(v_9 - 1) - v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_7 - 1)*(v_9 - 1) - v_7 + v_8*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_7 - 1)*(v_9 - 1) + v_9*(v_7 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_29 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_23 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_21 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) + v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) - (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_14 - 1)*(v_15 - 1)*(v_2 - 1)*(v_20 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_21*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1) + v_18*v_26*v_30*(v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 - v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - v_17*v_22*v_25*v_27*v_28*(v_31 - 1) - v_22*v_25*v_27*v_28*(v_17 - 1) - v_25*v_27*v_28*(v_22 - 1) - v_25*v_27*(v_28 - 1) - v_25*(v_27 - 1) - v_25 + 1) + (-v_18*v_30*(v_26 - 1) - v_18*(v_30 - 1) - v_18 + 1)*(-v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) - v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) - v_17*v_22*v_25*v_27*v_28*(v_31 - 1) - v_22*v_25*v_27*v_28*(v_17 - 1) - v_25*v_27*v_28*(v_22 - 1) - v_25*v_27*(v_28 - 1) - v_25*(v_27 - 1) - v_25 + 1)) - (v_21 - 1)*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31*(v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1) - v_18*v_26*v_30*(-v_17*v_19*v_22*v_24*v_25*v_27*v_28*v_31 + v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1) + (v_18*v_30*(v_26 - 1) + v_18*(v_30 - 1) + v_18 - 1)*(v_17*v_22*v_24*v_25*v_27*v_28*v_31*(v_19 - 1) + v_17*v_22*v_25*v_27*v_28*v_31*(v_24 - 1) + v_17*v_22*v_25*v_27*v_28*(v_31 - 1) + v_22*v_25*v_27*v_28*(v_17 - 1) + v_25*v_27*v_28*(v_22 - 1) + v_25*v_27*(v_28 - 1) + v_25*(v_27 - 1) + v_25 - 1)))
Post simplification
symp_time: 768.5855221748352
number of sums: 115
number of subs: 350
number of prods: 678
opt_time: 187.3965528011322
     fun: 14.999999999999789
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 106
     nit: 15
    njev: 11
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11,
       0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11])

real	16m0.896s
user	15m57.898s
sys	0m1.325s
Ended at: 
Wed Dec 13 18:59:24 CET 2023

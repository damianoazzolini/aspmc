Started at: 
Sat Dec  9 09:18:44 CET 2023
Instance 2
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.029484272003174
[INFO] aspmc: Compilation time:         0.015639543533325195
[INFO] aspmc: Preparation time:         0.00011539459228515625
[INFO] aspmc: Counting time:            0.09018301963806152
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2463059425354004
Pre simplification
number of sums: 947
number of prods: 2331
0.793614283643655*v_13*v_24 - 0.886384871716129*v_13 + 0.101723970615061*v_24 + 0.886384871716129
Post simplification
symp_time: 0.5853724479675293
number of sums: 2
number of subs: 1
number of prods: 4
opt_time: 0.02584385871887207
     fun: 0.9000000000000002
     jac: array([1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01])

real	0m5.013s
user	0m4.303s
sys	0m0.585s
Instance 3
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0304136276245117
[INFO] aspmc: Compilation time:         0.01580953598022461
[INFO] aspmc: Preparation time:         0.00011658668518066406
[INFO] aspmc: Counting time:            0.09020423889160156
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2519748210906982
Pre simplification
number of sums: 947
number of prods: 2331
0.970299*v_24*(0.842943193383927*v_12 - 0.842943193383927*(v_12 - 1)*(0.9801*v_13 + 0.0199) + 0.0798015010439932) + 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(1.11022302462516e-16*v_24 + 1.0)
Post simplification
symp_time: 0.711235523223877
number of sums: 4
number of subs: 5
number of prods: 10
opt_time: 0.0699007511138916
     fun: 1.8900000000000001
     jac: array([1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 1
     nit: 5
    njev: 1
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89])

real	0m5.108s
user	0m4.438s
sys	0m0.540s
Instance 4
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0297601222991943
[INFO] aspmc: Compilation time:         0.015577554702758789
[INFO] aspmc: Preparation time:         0.000118255615234375
[INFO] aspmc: Counting time:            0.08986473083496094
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.249992847442627
Pre simplification
number of sums: 947
number of prods: 2331
0.9801*v_23*v_24*(0.842943193383927*v_12 - 0.842943193383927*(v_12 - 1)*(0.9801*v_13 + 0.0199) + 0.0798015010439932) + 0.895338254258716*(v_12 - 1)*(v_13 - 1)*(v_23*v_24 - v_24*(v_23 - 1) - v_24 + 1)
Post simplification
symp_time: 0.7335472106933594
number of sums: 4
number of subs: 7
number of prods: 12
opt_time: 0.10238313674926758
     fun: 1.8000000000000007
     jac: array([1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01])

real	0m5.145s
user	0m4.462s
sys	0m0.549s
Instance 5
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.02982497215271
[INFO] aspmc: Compilation time:         0.015791654586791992
[INFO] aspmc: Preparation time:         0.00012135505676269531
[INFO] aspmc: Counting time:            0.08972573280334473
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.243957042694092
Pre simplification
number of sums: 947
number of prods: 2331
0.9801*v_23*v_24*(0.868745812768978*v_11 - 0.868745812768978*v_12*(v_11 - 1) + 0.851457771094875*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199) + 0.0172880416741027*(v_11 - 1)*(v_12 - 1) + 0.0539988816589418) - 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_23*v_24 - v_24*(v_23 - 1) - v_24 + 1)
Post simplification
symp_time: 0.8286640644073486
number of sums: 5
number of subs: 13
number of prods: 18
opt_time: 0.27759337425231934
     fun: 2.889999999999999
     jac: array([1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 34
     nit: 8
    njev: 4
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89])

real	0m5.405s
user	0m4.708s
sys	0m0.578s
Instance 6
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0303828716278076
[INFO] aspmc: Compilation time:         0.015877962112426758
[INFO] aspmc: Preparation time:         0.00011277198791503906
[INFO] aspmc: Counting time:            0.09205079078674316
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.246029853820801
Pre simplification
number of sums: 947
number of prods: 2331
0.913517247483641*v_22*v_23*v_24*(0.941480149401*v_11 - 0.941480149401*v_12*(v_11 - 1) + 0.92274469442792*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199) + 0.0187354549730799*(v_11 - 1)*(v_12 - 1) + 0.058519850599) + 0.904382075008804*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(0.93206534790699*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(1.11022302462516e-16*v_22 - 1.0) - (0.93206534790699*v_22 - 1.0)*(v_24*(v_23 - 1) + v_24 - 1))
Post simplification
symp_time: 0.9406478404998779
number of sums: 8
number of subs: 17
number of prods: 26
opt_time: 0.25440406799316406
     fun: 2.700000000000001
     jac: array([1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m5.506s
user	0m4.784s
sys	0m0.585s
Instance 7
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.029970169067383
[INFO] aspmc: Compilation time:         0.016217470169067383
[INFO] aspmc: Preparation time:         0.00011658668518066406
[INFO] aspmc: Counting time:            0.09348654747009277
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.24601411819458
Pre simplification
number of sums: 947
number of prods: 2331
0.913517247483641*v_22*v_23*v_24*(0.9509900499*v_10 - 0.9509900499*v_11*(v_10 - 1) + 0.9509900499*v_12*(v_10 - 1)*(v_11 - 1) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199) - 0.01892470199301*(v_10 - 1)*(v_11 - 1)*(v_12 - 1) + 0.0490099501) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(0.93206534790699*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(1.11022302462516e-16*v_22 - 1.0) - (0.93206534790699*v_22 - 1.0)*(v_24*(v_23 - 1) + v_24 - 1))
Post simplification
symp_time: 1.1645960807800293
number of sums: 6
number of subs: 25
number of prods: 32
opt_time: 0.7564358711242676
     fun: 3.88999999999999
     jac: array([1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 78
     nit: 12
    njev: 8
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m6.232s
user	0m5.489s
sys	0m0.593s
Instance 8
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0303306579589844
[INFO] aspmc: Compilation time:         0.016210317611694336
[INFO] aspmc: Preparation time:         0.00011706352233886719
[INFO] aspmc: Counting time:            0.08967304229736328
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2437636852264404
Pre simplification
number of sums: 947
number of prods: 2331
0.92274469442792*v_21*v_22*v_23*v_24*(0.9509900499*v_10 - 0.9509900499*v_11*(v_10 - 1) + 0.9509900499*v_12*(v_10 - 1)*(v_11 - 1) - 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199) - 0.01892470199301*(v_10 - 1)*(v_11 - 1)*(v_12 - 1) + 0.0490099501) - 0.895338254258716*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(0.941480149401*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.980098049601*v_21*v_22 - 0.980098049601*v_22*(v_21 - 1) - 0.980098049601*v_22 + 1.0) + (v_24*(v_23 - 1) + v_24 - 1)*(0.038619850599*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0)) - 0.0181789932249245*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(0.941480149401*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.9801*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0) + (v_24*(v_23 - 1) + v_24 - 1)*(0.038619850599*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0))
Post simplification
symp_time: 1.5373198986053467
number of sums: 13
number of subs: 44
number of prods: 65
opt_time: 0.5094151496887207
     fun: 3.6
     jac: array([1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m6.321s
user	0m5.605s
sys	0m0.587s
Instance 9
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.030785322189331
[INFO] aspmc: Compilation time:         0.015926361083984375
[INFO] aspmc: Preparation time:         0.00011491775512695312
[INFO] aspmc: Counting time:            0.09149456024169922
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2450990676879883
Pre simplification
number of sums: 947
number of prods: 2331
0.92274469442792*v_21*v_22*v_23*v_24*(-0.96059601*v_10*(v_9 - 1) + 0.96059601*v_11*(v_10 - 1)*(v_9 - 1) - 0.96059601*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) + 0.96059601*v_9 + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_9 - 1) + 0.019115860599*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) + 0.03940399) + 0.904382075008804*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1)*(0.941480149401*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.980098049601*v_21*v_22 - 0.980098049601*v_22*(v_21 - 1) - 0.980098049601*v_22 + 1.0) + (v_24*(v_23 - 1) + v_24 - 1)*(0.038619850599*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0)) + 0.0183626194191156*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1)*(0.941480149401*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.9801*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0) + (v_24*(v_23 - 1) + v_24 - 1)*(0.038619850599*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0))
Post simplification
symp_time: 2.01151442527771
number of sums: 18
number of subs: 48
number of prods: 73
opt_time: 1.1380794048309326
     fun: 4.889999999999927
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 45
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m7.476s
user	0m6.779s
sys	0m0.554s
Instance 10
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.030308723449707
[INFO] aspmc: Compilation time:         0.016204357147216797
[INFO] aspmc: Preparation time:         0.00011920928955078125
[INFO] aspmc: Counting time:            0.09554839134216309
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2499945163726807
Pre simplification
number of sums: 947
number of prods: 2331
0.93206534790699*v_20*v_21*v_22*v_23*v_24*(-0.96059601*v_10*(v_9 - 1) + 0.96059601*v_11*(v_10 - 1)*(v_9 - 1) - 0.96059601*v_12*(v_10 - 1)*(v_11 - 1)*(v_9 - 1) + 0.96059601*v_9 + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_9 - 1) + 0.019115860599*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_9 - 1) + 0.03940399) + 0.0183626194191156*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1)*(0.9509900499*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.9801*v_20*v_21*v_22 + 0.9801*v_21*v_22*(v_20 - 1) + 0.9801*v_22*(v_21 - 1) + 0.9801*v_22 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.0291099501*v_20*v_21*v_22 + 0.9801*v_21*v_22*(v_20 - 1) + 0.9801*v_22*(v_21 - 1) + 0.9801*v_22 - 1.0)) + 0.904382075008804*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_9 - 1)*(0.9509900499*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.9799049601*v_20*v_21*v_22 - 0.000199*v_20*(0.9801*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0) + 0.000199*v_20 + 0.9799049601*v_21*v_22*(v_20 - 1) + 0.9799049601*v_22*(v_21 - 1) + 0.9799049601*v_22 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.0291099501*v_20*v_21*v_22 + 0.9801*v_21*v_22*(v_20 - 1) + 0.9801*v_22*(v_21 - 1) + 0.9801*v_22 - 1.0))
Post simplification
symp_time: 2.2141623497009277
number of sums: 28
number of subs: 56
number of prods: 100
opt_time: 0.8908069133758545
     fun: 4.500000000000003
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m7.421s
user	0m6.679s
sys	0m0.619s
Instance 11
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.030470371246338
[INFO] aspmc: Compilation time:         0.015811681747436523
[INFO] aspmc: Preparation time:         0.00011920928955078125
[INFO] aspmc: Counting time:            0.08792829513549805
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.242476224899292
Pre simplification
number of sums: 947
number of prods: 2331
0.93206534790699*v_20*v_21*v_22*v_23*v_24*(0.970299*v_10*(v_8 - 1)*(v_9 - 1) - 0.970299*v_11*(v_10 - 1)*(v_8 - 1)*(v_9 - 1) + 0.970299*v_12*(v_10 - 1)*(v_11 - 1)*(v_8 - 1)*(v_9 - 1) + 0.9801*v_8 - 0.9801*v_9*(v_8 - 1) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_8 - 1)*(v_9 - 1) - 0.0193089501*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_8 - 1)*(v_9 - 1) + 0.0199) - 0.0185481004233491*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9509900499*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.9801*v_20*v_21*v_22 + 0.9801*v_21*v_22*(v_20 - 1) + 0.9801*v_22*(v_21 - 1) + 0.9801*v_22 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.0291099501*v_20*v_21*v_22 + 0.9801*v_21*v_22*(v_20 - 1) + 0.9801*v_22*(v_21 - 1) + 0.9801*v_22 - 1.0)) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9509900499*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.9799049601*v_20*v_21*v_22 - 0.000199*v_20*(0.9801*v_21*v_22 - 0.9801*v_22*(v_21 - 1) - 0.9801*v_22 + 1.0) + 0.000199*v_20 + 0.9799049601*v_21*v_22*(v_20 - 1) + 0.9799049601*v_22*(v_21 - 1) + 0.9799049601*v_22 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.0291099501*v_20*v_21*v_22 + 0.9801*v_21*v_22*(v_20 - 1) + 0.9801*v_22*(v_21 - 1) + 0.9801*v_22 - 1.0))
Post simplification
symp_time: 3.623723030090332
number of sums: 25
number of subs: 70
number of prods: 111
opt_time: 1.0676250457763672
     fun: 5.890000000002065
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 2
     nit: 6
    njev: 2
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89])

real	0m9.016s
user	0m8.279s
sys	0m0.604s
Instance 12
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.030362844467163
[INFO] aspmc: Compilation time:         0.015692710876464844
[INFO] aspmc: Preparation time:         0.00011301040649414062
[INFO] aspmc: Counting time:            0.08891177177429199
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.247076988220215
Pre simplification
number of sums: 947
number of prods: 2331
0.941480149401*v_19*v_20*v_21*v_22*v_23*v_24*(0.970299*v_10*(v_8 - 1)*(v_9 - 1) - 0.970299*v_11*(v_10 - 1)*(v_8 - 1)*(v_9 - 1) + 0.970299*v_12*(v_10 - 1)*(v_11 - 1)*(v_8 - 1)*(v_9 - 1) + 0.9801*v_8 - 0.9801*v_9*(v_8 - 1) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_8 - 1)*(v_9 - 1) - 0.0193089501*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_8 - 1)*(v_9 - 1) + 0.009801*(v_8 - 1)*(v_9 - 1) + 0.0199) - 0.0185481004233491*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) - 0.913517247483641*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.98980299*v_19*v_20*v_21*v_22 + 0.98980299*v_19*v_21*v_22*(v_20 - 1) + 0.98980299*v_19*v_22*(v_21 - 1) - 0.00999801*v_19*v_22 + 0.999801*v_19*(v_22 - 1) + 0.999801*v_19 - 0.000199*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.000199*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.999801) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))
Post simplification
symp_time: 5.720128774642944
number of sums: 32
number of subs: 89
number of prods: 159
opt_time: 1.5016417503356934
     fun: 5.3999999999999995
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01])

real	0m11.565s
user	0m10.834s
sys	0m0.593s
Instance 13
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.02994966506958
[INFO] aspmc: Compilation time:         0.01606583595275879
[INFO] aspmc: Preparation time:         0.00011277198791503906
[INFO] aspmc: Counting time:            0.09265518188476562
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.246961832046509
Pre simplification
number of sums: 947
number of prods: 2331
0.941480149401*v_19*v_20*v_21*v_22*v_23*v_24*(-0.9801*v_10*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.9801*v_11*(v_10 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_7 - 0.99*v_8*(v_7 - 1) + 0.99*v_9*(v_7 - 1)*(v_8 - 1) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01950399*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.0099*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01) + 0.0187354549730799*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + 0.92274469442792*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.98980299*v_19*v_20*v_21*v_22 + 0.98980299*v_19*v_21*v_22*(v_20 - 1) + 0.98980299*v_19*v_22*(v_21 - 1) - 0.00999801*v_19*v_22 + 0.999801*v_19*(v_22 - 1) + 0.999801*v_19 - 0.000199*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.000199*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.999801) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))
Post simplification
symp_time: 10.89572548866272
number of sums: 36
number of subs: 97
number of prods: 170
opt_time: 2.713937520980835
     fun: 6.889999999994429
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 24
     nit: 8
    njev: 4
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89])

real	0m17.962s
user	0m17.178s
sys	0m0.620s
Instance 14
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.030052900314331
[INFO] aspmc: Compilation time:         0.015916824340820312
[INFO] aspmc: Preparation time:         0.000110626220703125
[INFO] aspmc: Counting time:            0.08899569511413574
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2426939010620117
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(0.9509900499*v_19*v_20*v_21*v_22*v_23*v_24*(-0.9801*v_10*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.9801*v_11*(v_10 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.9801*v_12*(v_10 - 1)*(v_11 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_7 - 0.99*v_8*(v_7 - 1) + 0.99*v_9*(v_7 - 1)*(v_8 - 1) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01950399*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.0099*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01) + 0.00941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + 0.93206534790699*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.98980299*v_19*v_20*v_21*v_22 + 0.98980299*v_19*v_21*v_22*(v_20 - 1) + 0.98980299*v_19*v_22*(v_21 - 1) - 0.00999801*v_19*v_22 + 0.999801*v_19*(v_22 - 1) + 0.999801*v_19 - 0.000199*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.000199*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.999801) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))) - 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))
Post simplification
symp_time: 12.828902006149292
number of sums: 47
number of subs: 123
number of prods: 222
opt_time: 2.2753117084503174
     fun: 6.30000000000002
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01])

real	0m19.452s
user	0m18.687s
sys	0m0.598s
Instance 15
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0302014350891113
[INFO] aspmc: Compilation time:         0.01603984832763672
[INFO] aspmc: Preparation time:         0.00011515617370605469
[INFO] aspmc: Counting time:            0.09097504615783691
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.246607542037964
Pre simplification
number of sums: 947
number of prods: 2331
-v_18*(-0.9509900499*v_19*v_20*v_21*v_22*v_23*v_24*(0.99*v_10*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.019701*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.009509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.98980299*v_19*v_20*v_21*v_22 + 0.98980299*v_19*v_21*v_22*(v_20 - 1) + 0.98980299*v_19*v_22*(v_21 - 1) - 0.00999801*v_19*v_22 + 0.999801*v_19*(v_22 - 1) + 0.999801*v_19 - 0.000199*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.000199*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.999801) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.96059601*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_24*(v_23 - 1) + v_24 - 1)*(-0.02940399*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))
Post simplification
symp_time: 26.033891201019287
number of sums: 46
number of subs: 137
number of prods: 235
opt_time: 3.288684129714966
     fun: 7.889999999995924
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 13
     nit: 7
    njev: 3
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89])

real	0m33.732s
user	0m32.904s
sys	0m0.640s
Instance 16
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0299997329711914
[INFO] aspmc: Compilation time:         0.015521049499511719
[INFO] aspmc: Preparation time:         0.00011157989501953125
[INFO] aspmc: Counting time:            0.08698034286499023
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.239636182785034
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(-0.96059601*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(-0.99*v_10*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_11*(v_10 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*v_6 + 1.0*v_7*(v_6 - 1) - 1.0*v_8*(v_6 - 1)*(v_7 - 1) + 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) + 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.019701*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.01*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.941480149401*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.970299*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.970299*v_17*v_19*v_20*v_21*v_22 - 0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (0.99*v_17 - 1.0)*(-0.9801*v_19*v_20*v_21*v_22 + 0.9801*v_19*v_21*v_22*(v_20 - 1) + 0.9801*v_19*v_22*(v_21 - 1) - 0.0099*v_19*v_22 + 0.99*v_19*(v_22 - 1) + 0.99*v_19 - 0.01*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.01*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.99)) + (0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) - (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))*(v_24*(v_23 - 1) + v_24 - 1)) + 0.009509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.970299*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.970299*v_17*v_19*v_20*v_21*v_22 - 0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) + (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) - (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))*(v_24*(v_23 - 1) + v_24 - 1))) - 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.970299*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.970299*v_17*v_19*v_20*v_21*v_22 - 0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) + (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) - (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))*(v_24*(v_23 - 1) + v_24 - 1))
Post simplification
symp_time: 10.25020456314087
number of sums: 79
number of subs: 192
number of prods: 404
opt_time: 3.69118070602417
     fun: 7.199999999999998
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01])

real	0m18.285s
user	0m17.504s
sys	0m0.636s
Instance 17
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0303852558135986
[INFO] aspmc: Compilation time:         0.01564335823059082
[INFO] aspmc: Preparation time:         0.00010991096496582031
[INFO] aspmc: Counting time:            0.08933210372924805
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.243382692337036
Pre simplification
number of sums: 947
number of prods: 2331
-v_18*(-0.96059601*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(0.99*v_10*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.9801*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.970299*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.970299*v_17*v_19*v_20*v_21*v_22 - 0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (0.99*v_17 - 1.0)*(-0.9801*v_19*v_20*v_21*v_22 + 0.9801*v_19*v_21*v_22*(v_20 - 1) + 0.9801*v_19*v_22*(v_21 - 1) - 0.0099*v_19*v_22 + 0.99*v_19*(v_22 - 1) + 0.99*v_19 - 0.01*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.01*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.99)) + (0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) - (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))*(v_24*(v_23 - 1) + v_24 - 1)) + 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.970299*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.970299*v_17*v_19*v_20*v_21*v_22 - 0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) + (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) - (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))*(v_24*(v_23 - 1) + v_24 - 1))) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.970299*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.970299*v_17*v_19*v_20*v_21*v_22 - 0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) + (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (0.99*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(0.99*v_17 - 1.0) - (0.99*v_17 - 1.0)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))*(v_24*(v_23 - 1) + v_24 - 1))
Post simplification
symp_time: 19.31044912338257
number of sums: 80
number of subs: 203
number of prods: 416
opt_time: 8.20375657081604
     fun: 8.889999999972753
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 35
     nit: 9
    njev: 5
  status: 8
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m31.896s
user	0m31.069s
sys	0m0.647s
Instance 18
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.030167818069458
[INFO] aspmc: Compilation time:         0.01608562469482422
[INFO] aspmc: Preparation time:         0.00010919570922851562
[INFO] aspmc: Counting time:            0.09096479415893555
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.244102954864502
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(0.970299*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(0.99*v_10*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.9801*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.0099*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.9509900499*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.9801*v_19*v_20*v_21*v_22 + 0.9801*v_19*v_21*v_22*(v_20 - 1) + 0.9801*v_19*v_22*(v_21 - 1) - 0.0099*v_19*v_22 + 0.99*v_19*(v_22 - 1) + 0.99*v_19 - 0.01*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.01*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.99)) + (v_24*(v_23 - 1) + v_24 - 1)*(-v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))) + 0.0096059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(-v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) - 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) - (v_24*(v_23 - 1) + v_24 - 1)*(v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))
Post simplification
symp_time: 19.18050503730774
number of sums: 86
number of subs: 216
number of prods: 423
opt_time: 4.399420499801636
     fun: 8.100000000000028
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m27.981s
user	0m27.161s
sys	0m0.642s
Instance 19
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0303516387939453
[INFO] aspmc: Compilation time:         0.01582026481628418
[INFO] aspmc: Preparation time:         0.00011515617370605469
[INFO] aspmc: Counting time:            0.08642959594726562
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.249138593673706
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(0.970299*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(0.99*v_10*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.9801*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.9801*v_19*v_20*v_21*v_22 + 0.9801*v_19*v_21*v_22*(v_20 - 1) + 0.9801*v_19*v_22*(v_21 - 1) - 0.0099*v_19*v_22 + 0.99*v_19*(v_22 - 1) + 0.99*v_19 - 0.01*v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) + 0.01*(v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0)) - 0.99)) + (v_24*(v_23 - 1) + v_24 - 1)*(v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))) + 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.9801*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.9801*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.9801*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(v_16*v_17*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + 0.9801*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(-0.0099*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))
Post simplification
symp_time: 37.07243990898132
number of sums: 90
number of subs: 218
number of prods: 429
opt_time: 12.250954389572144
     fun: 9.489999999992438
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 57
     nit: 11
    njev: 7
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.11, 0.89,
       0.11, 0.89, 0.11, 0.89, 0.11, 0.89, 0.11, 0.89])

real	0m53.762s
user	0m52.865s
sys	0m0.700s
Instance 20
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0301284790039062
[INFO] aspmc: Compilation time:         0.016134262084960938
[INFO] aspmc: Preparation time:         0.00011610984802246094
[INFO] aspmc: Counting time:            0.0883169174194336
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.242521047592163
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(0.9801*v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(0.99*v_10*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_11*(v_10 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_12*(v_10 - 1)*(v_11 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 0.99*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.99*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 0.01*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.96059601*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15 - 1)*(v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) - (v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0))))*(v_16*(v_17 - 1) + v_16 - 1)) + (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))) + 0.00970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) - 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) + v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))
Post simplification
symp_time: 35.79277229309082
number of sums: 90
number of subs: 219
number of prods: 452
opt_time: 4.897434234619141
     fun: 8.999999999999998
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1.])
 message: 'Optimization terminated successfully'
    nfev: 2
     nit: 2
    njev: 2
  status: 0
 success: True
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01])

real	0m45.062s
user	0m44.252s
sys	0m0.649s
Instance 21
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.031425714492798
[INFO] aspmc: Compilation time:         0.01643538475036621
[INFO] aspmc: Preparation time:         0.00011229515075683594
[INFO] aspmc: Counting time:            0.08071780204772949
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.233232259750366
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(0.9801*v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(-1.0*v_10*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_11*(v_10 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_3*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.970299*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15 - 1)*(v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) - (v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0))))*(v_16*(v_17 - 1) + v_16 - 1)) + (v_24*(v_23 - 1) + v_24 - 1)*(-0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0))) + 0.009801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(-0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) - (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))
Post simplification
symp_time: 88.26396608352661
number of sums: 87
number of subs: 231
number of prods: 461
opt_time: 15.947377920150757
     fun: 10.484561803287454
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 79
     nit: 13
    njev: 9
  status: 8
 success: False
       x: array([0.89      , 0.01      , 0.89      , 0.01      , 0.89      ,
       0.01      , 0.89      , 0.01      , 0.89      , 0.10909363,
       0.89      , 0.10909363, 0.89      , 0.10909363, 0.89      ,
       0.10909363, 0.89      , 0.10909363, 0.89      , 0.10909363,
       0.89      ])

real	1m48.898s
user	1m47.642s
sys	0m0.793s
Instance 22
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.029154062271118
[INFO] aspmc: Compilation time:         0.015217304229736328
[INFO] aspmc: Preparation time:         0.00011205673217773438
[INFO] aspmc: Counting time:            0.08265399932861328
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2275989055633545
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(v_27*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*(-1.0*v_10*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_11*(v_10 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_3*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - 1.0*v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + 1.0*v_6 - 1.0*v_7*(v_6 - 1) + 1.0*v_8*(v_6 - 1)*(v_7 - 1) - 1.0*v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(0.9801*v_13 + 0.0199)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)) + 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15 - 1)*(v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) - (v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0))))*(v_16*(v_17 - 1) + v_16 - 1)) - (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_27 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) - (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) - 0.9801*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(-0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))
Post simplification
symp_time: 71.27646350860596
number of sums: 85
number of subs: 233
number of prods: 463
opt_time: 8.534477472305298
     fun: 11.000000000000417
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1.])
 message: 'Inequality constraints incompatible'
    nfev: 14
     nit: 4
    njev: 4
  status: 4
 success: False
       x: array([0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.11, 0.89, 0.01, 0.99,
       0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01])

real	1m24.207s
user	1m23.208s
sys	0m0.733s
Instance 23
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0290606021881104
[INFO] aspmc: Compilation time:         0.01596999168395996
[INFO] aspmc: Preparation time:         0.00011014938354492188
[INFO] aspmc: Counting time:            0.08742785453796387
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2339208126068115
Pre simplification
number of sums: 947
number of prods: 2331
0.99*v_18*(v_27*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*((v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-1.0*v_13*(v_2 - 1) + 1.0*v_2 + 0.01*(v_13 - 1)*(v_2 - 1)) - 1.0*(-v_13*(v_2 - 1) + v_2 + (v_13 - 1)*(v_2 - 1))*(v_10*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_3*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_6 + v_7*(v_6 - 1) - v_8*(v_6 - 1)*(v_7 - 1) + v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1))) - (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15*(-0.99*v_19*v_20*v_21*v_22 + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_15 - 1)*(v_20*(0.99*v_19*v_21*v_22 - 0.99*v_19*v_22*(v_21 - 1) + 0.01*v_19*v_22 - 1.0*v_19*(v_22 - 1) - 1.0*v_19 + 1.0) - (v_20 - 1)*(1.0*v_21*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - (v_21 - 1)*(0.99*v_19*v_22 - 0.99*v_19*(v_22 - 1) - 0.99*v_19 + 1.0))))*(v_16*(v_17 - 1) + v_16 - 1)) - (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) + (v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_2 - 1)*(v_27 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) - (v_24*(v_23 - 1) + v_24 - 1)*(0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) - (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(0.99*v_15*v_16*v_17*v_19*v_20*v_21*v_22 - 0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)) + (v_24*(v_23 - 1) + v_24 - 1)*(-0.99*v_15*v_19*v_20*v_21*v_22*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0) + (v_16*(v_17 - 1) + v_16 - 1)*(0.99*v_19*v_20*v_21*v_22*(v_15 - 1) + 0.99*v_19*v_21*v_22*(v_20 - 1) + 0.99*v_19*v_22*(v_21 - 1) - 0.01*v_19*v_22 + 1.0*v_19*(v_22 - 1) + 1.0*v_19 - 1.0)))
Post simplification
symp_time: 143.86020636558533
number of sums: 87
number of subs: 244
number of prods: 462
opt_time: 7.670231103897095
     fun: 10.790000000004667
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 14
     nit: 8
    njev: 4
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01,
       0.89])

real	2m36.270s
user	2m34.971s
sys	0m0.813s
Instance 24
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.0285208225250244
[INFO] aspmc: Compilation time:         0.016215801239013672
[INFO] aspmc: Preparation time:         0.0001494884490966797
[INFO] aspmc: Counting time:            0.08047914505004883
[INFO] aspmc: ------------------------------------------------------------
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.227914333343506
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(v_27*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*v_26*((v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(-1.0*v_13*(v_2 - 1) + 1.0*v_2 + 0.01*(v_13 - 1)*(v_2 - 1)) - 1.0*(-v_13*(v_2 - 1) + v_2 + (v_13 - 1)*(v_2 - 1))*(v_10*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_3*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_6 + v_7*(v_6 - 1) - v_8*(v_6 - 1)*(v_7 - 1) + v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1))) - 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26 - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_15*(-v_19*v_20*v_21*v_22*v_26 + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_15 - 1)*(-v_20*(-v_19*v_21*v_22*v_26 + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_20 - 1)*(v_21*(-v_19*v_22*v_26 + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_21 - 1)*(v_26*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - v_26 + 1))))*(v_16*(v_17 - 1) + v_16 - 1)) - (v_24*(v_23 - 1) + v_24 - 1)*(v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_2 - 1)*(v_27 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26 - v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)) - (v_24*(v_23 - 1) + v_24 - 1)*(v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)))) + 0.99*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26 - v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)) + (v_24*(v_23 - 1) + v_24 - 1)*(-v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)))
Post simplification
symp_time: 143.84522771835327
number of sums: 106
number of subs: 245
number of prods: 438
opt_time: 16.04822850227356
     fun: 11.3
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 59
     nit: 15
    njev: 11
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.01,
       0.89, 0.01])

real	2m44.619s
user	2m43.294s
sys	0m0.826s
Instance 25
[INFO] aspmc: Tree Decomposition #bags: 28 unfolded treewidth: 3 #vertices: 30
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 38 treewidth: 8 #vertices: 63
[INFO] aspmc: Dtree time:               2.028343677520752
[INFO] aspmc: Compilation time:         0.016128063201904297
[INFO] aspmc: Preparation time:         0.00010943412780761719
[INFO] aspmc: Counting time:            0.08352446556091309
[INFO] aspmc: ------------------------------------------------------------
/home/dazzolin/anaconda3/lib/python3.9/site-packages/scipy/optimize/optimize.py:282: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
[0.01::a0., 0.99::a1., 0.01::a2., 0.99::a3., 0.01::a4., 0.99::a5., 0.01::a6., 0.99::a7., 0.01::a8., 0.99::a9., 0.01::a10., 0.99::a11., 0.01::a12., 0.99::a13., 0.01::a14., 0.99::a15., 0.01::a16., 0.99::a17., 0.01::a18., 0.99::a19., 0.01::a20., 0.99::a21., 0.01::a22., 0.99::a23., 0.01::a24., qr:-not a0,not a2,not a4,not a6,not a8,not a10,not a12,not a14,not a16,not a18,not a20,not a22,not a24., qr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not nqr., nqr:-a1,a3,a5,a7,a9,a11,a13,a15,a17,a19,a21,a23,not qr., query(qr).]
tracc
nnf_construction_time: 3.2288448810577393
Pre simplification
number of sums: 947
number of prods: 2331
v_18*(v_27*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_23*v_24*v_26*((v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_1*(v_13 - 1)*(v_2 - 1) - v_13*(v_2 - 1) + v_2) - (-v_13*(v_2 - 1) + v_2 + (v_13 - 1)*(v_2 - 1))*(v_10*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_11*(v_10 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + v_12*(v_10 - 1)*(v_11 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_3*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_4*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) + v_5*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_3 - 1)*(v_4 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1) - v_6 + v_7*(v_6 - 1) - v_8*(v_6 - 1)*(v_7 - 1) + v_9*(v_6 - 1)*(v_7 - 1)*(v_8 - 1))) + (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26 - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_15*(-v_19*v_20*v_21*v_22*v_26 + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_15 - 1)*(-v_20*(-v_19*v_21*v_22*v_26 + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_20 - 1)*(v_21*(-v_19*v_22*v_26 + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_21 - 1)*(v_26*(v_19*v_22 - v_19*(v_22 - 1) - v_19 + 1) - v_26 + 1))))*(v_16*(v_17 - 1) + v_16 - 1)) - (v_24*(v_23 - 1) + v_24 - 1)*(v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_2 - 1)*(v_27 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26 - v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)) - (v_24*(v_23 - 1) + v_24 - 1)*(v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) + v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) - (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)))) - (v_1 - 1)*(v_10 - 1)*(v_11 - 1)*(v_12 - 1)*(v_13 - 1)*(v_18 - 1)*(v_2 - 1)*(v_3 - 1)*(v_4 - 1)*(v_5 - 1)*(v_6 - 1)*(v_7 - 1)*(v_8 - 1)*(v_9 - 1)*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26*(v_24*(v_23 - 1) + v_24 - 1) - v_23*v_24*(v_15*v_16*v_17*v_19*v_20*v_21*v_22*v_26 - v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)) + (v_24*(v_23 - 1) + v_24 - 1)*(-v_15*v_19*v_20*v_21*v_22*v_26*(v_16*(v_17 - 1) + v_16 - 1) - v_16*v_17*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1) + (v_16*(v_17 - 1) + v_16 - 1)*(v_19*v_20*v_21*v_22*v_26*(v_15 - 1) + v_19*v_21*v_22*v_26*(v_20 - 1) + v_19*v_22*v_26*(v_21 - 1) + v_19*v_22*(v_26 - 1) + v_19*(v_22 - 1) + v_19 - 1)))
Post simplification
symp_time: 145.9416422843933
number of sums: 104
number of subs: 249
number of prods: 435
opt_time: 2.7749550342559814
     fun: 11.69
     jac: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1.])
 message: 'Positive directional derivative for linesearch'
    nfev: 2
     nit: 6
    njev: 2
  status: 8
 success: False
       x: array([0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89,
       0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01, 0.89, 0.01,
       0.89, 0.01, 0.89])

real	2m33.335s
user	2m32.178s
sys	0m0.712s
Ended at: 
Sat Dec  9 09:35:14 CET 2023

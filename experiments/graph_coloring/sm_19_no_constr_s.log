Started at: 
Thu Dec  7 17:38:22 CET 2023
Instance 19
[INFO] aspmc: Tree Decomposition #bags: 217 unfolded treewidth: 6 #vertices: 236
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 222 treewidth: 23 #vertices: 252
[INFO] aspmc: Dtree time:               32.0750834941864
[INFO] aspmc: Compilation time:         113.63593173027039
[INFO] aspmc: Preparation time:         0.00037860870361328125
slurmstepd: error: Job 2096972 exceeded memory limit (24913168 > 16777216), being killed
slurmstepd: error: Exceeded job memory limit
slurmstepd: error: *** JOB 2096972 ON node03 CANCELLED AT 2023-12-07T17:41:22 ***
[red(X):-node(X),not green(X),not blue(X)., green(X):-node(X),not red(X),not blue(X)., blue(X):-node(X),not red(X),not green(X)., e(X,Y):-edge(X,Y)., e(Y,X):-edge(Y,X)., :-e(X,Y),red(X),red(Y)., :-e(X,Y),green(X),green(Y)., :-e(X,Y),blue(X),blue(Y)., 0.6::edge(1,2)., 0.1::edge(1,3)., 0.4::edge(2,5)., 0.3::edge(2,6)., 0.3::edge(3,4)., 0.8::edge(4,5)., 0.2::edge(5,6)., 0.3::edge(7,10)., 0.3::edge(5,10)., 0.3::edge(3,7)., 0.3::edge(13,18)., 0.3::edge(15,18)., 0.3::edge(14,16)., 0.3::edge(1,14)., 0.3::edge(3,17)., 0.3::edge(1,15)., 0.3::edge(13,16)., 0.3::edge(4,11)., 0.3::edge(8,17)., 0.3::edge(7,19)., 0.3::edge(11,17)., qr:-blue(1)., qr:-blue(3)., qr:-blue(5)., qr:-blue(7)., qr:-blue(9)., qr:-blue(11)., qr:-blue(13)., qr:-blue(15)., qr:-blue(17)., qr:-blue(19)., red(1)., green(4)., green(6)., node(1)., node(2)., node(3)., node(4)., node(5)., node(6)., node(7)., node(8)., node(9)., node(10)., node(11)., node(12)., node(13)., node(14)., node(15)., node(16)., node(17)., node(18)., node(19)., query(qr).]
tracc
Traceback (most recent call last):
  File "/home/dazzolin/test/2023aspmc/aspmc/experiments/graph_coloring/runner_without_pair_constr.py", line 26, in <module>
    res = compute_optimal_probability(
  File "/home/dazzolin/test/2023aspmc/aspmc/experiments/graph_coloring/a.py", line 172, in compute_optimal_probability
    lq, uq, symb_vars = get_eq(current_prog,query,optimizable_facts)
  File "/home/dazzolin/test/2023aspmc/aspmc/experiments/graph_coloring/a.py", line 98, in get_eq
    results = cnf.evaluate(strategy = strategy, preprocessing = preprocessing)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/cnf.py", line 904, in evaluate
    return self.solve_compilation(preprocessing = preprocessing)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/cnf.py", line 934, in solve_compilation
    results = self.solve_compilation_two()
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/cnf.py", line 828, in solve_compilation_two
    results = circ.parse_wmc(cnf_tmp + '.nnf', weights, P, self.semirings[0], self.semirings[1], self.transform, self.mapping_id_val)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/constrained_ddnnf.py", line 209, in parse_wmc
    extracted_eq_lp = f"({extracted_eq_lp})*({v_lp})"
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 1517, in _array_str_implementation
    return array2string(a, max_line_width, precision, suppress_small, ' ', "")
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 692, in array2string
    return _array2string(a, options, separator, prefix)
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 468, in wrapper
    return f(self, *args, **kwargs)
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 501, in _array2string
    lst = _formatArray(a, format_function, options['linewidth'],
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 845, in _formatArray
    return recurser(index=(),
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 810, in recurser
    s, line = _extendLine_pretty(
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 715, in _extendLine_pretty
    return _extendLine(s, line, word, line_width, next_line_prefix, legacy)
  File "/home/dazzolin/anaconda3/lib/python3.9/site-packages/numpy/core/arrayprint.py", line 696, in _extendLine
    needs_wrap = len(line) + len(word) > line_width
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/signal_handling.py", line 17, in handler
    raise KeyboardInterrupt("Received Control+C, cleaning up and shutting down.")
KeyboardInterrupt: Received Control+C, cleaning up and shutting down.

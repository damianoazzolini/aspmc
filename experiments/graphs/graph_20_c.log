Started at: 
Tue Dec  5 08:54:31 CET 2023
Instance 2
[INFO] aspmc: Tree Decomposition #bags: 734 unfolded treewidth: 17 #vertices: 915
[INFO] aspmc: Preprocessing disabled
[INFO] aspmc:    Stats Compilation
[INFO] aspmc: ------------------------------------------------------------
[INFO] aspmc: X/D-Constrained Tree Decomposition #bags: 604 treewidth: 21 #vertices: 915
[INFO] aspmc: Dtree time:               1.4172296524047852
[INFO] aspmc: Compilation time:         380.09456634521484
[INFO] aspmc: Preparation time:         0.0009570121765136719
slurmstepd: error: Job 2096384 exceeded memory limit (17628772 > 16777216), being killed
slurmstepd: error: Exceeded job memory limit
slurmstepd: error: *** JOB 2096384 ON node01 CANCELLED AT 2023-12-05T09:05:31 ***
[0.5::edge(1,2)., 0.5::edge(1,3)., 0.9373688177815297::edge(2,4)., 0.9323451875890345::edge(3,5)., 0.8751781808392783::edge(4,6)., 0.827722675327374::edge(5,6)., 0.8876445887408475::edge(6,7)., 0.8336160030181139::edge(6,8)., 0.8234024365544791::edge(7,9)., 0.8688921895384063::edge(8,9)., 0.8295538704021002::edge(9,10)., 0.9284584812326627::edge(9,11)., 0.9388743547028834::edge(10,12)., 0.8786913902662149::edge(11,13)., 0.844089894370136::edge(12,13)., 0.8290377213061273::edge(13,14)., 0.8342264638580897::edge(14,17)., 0.9092665477309755::edge(13,15)., 0.8189950030628778::edge(15,16)., 0.8168325103458121::edge(16,17)., path(X,X):-node(X)., path(X,Y):-path(X,Z),edge(Z,Y)., transmit(A,B):-path(A,B),node(A),node(B),not not_transmit(A,B)., not_transmit(A,B):-path(A,B),node(A),node(B),not transmit(A,B)., qr:-transmit(1,17)., node(1)., node(2)., node(3)., node(4)., node(5)., node(6)., node(7)., node(8)., node(9)., node(10)., node(11)., node(12)., node(13)., node(14)., node(15)., node(16)., node(17)., query(qr).]
tracc
Traceback (most recent call last):
  File "/home/dazzolin/test/2023aspmc/aspmc/experiments/graphs/runner_with_pair_constr.py", line 34, in <module>
    res = compute_optimal_probability(
  File "/home/dazzolin/test/2023aspmc/aspmc/experiments/graphs/a.py", line 162, in compute_optimal_probability
    lq, uq, symb_vars = get_eq(current_prog,query,optimizable_facts)
  File "/home/dazzolin/test/2023aspmc/aspmc/experiments/graphs/a.py", line 98, in get_eq
    results = cnf.evaluate(strategy = strategy, preprocessing = preprocessing)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/cnf.py", line 904, in evaluate
    return self.solve_compilation(preprocessing = preprocessing)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/cnf.py", line 934, in solve_compilation
    results = self.solve_compilation_two()
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/cnf.py", line 828, in solve_compilation_two
    results = circ.parse_wmc(cnf_tmp + '.nnf', weights, P, self.semirings[0], self.semirings[1], self.transform, self.mapping_id_val)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/constrained_ddnnf.py", line 202, in parse_wmc
    v_lp = np.array([ transform_lp(w) for w in mem_lp[child] ], dtype = first_semiring.dtype)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/constrained_ddnnf.py", line 202, in <listcomp>
    v_lp = np.array([ transform_lp(w) for w in mem_lp[child] ], dtype = first_semiring.dtype)
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/compile/constrained_ddnnf.py", line 47, in <lambda>
    transform_lp = lambda x : first_semiring.from_value(f_transform_lp(x))
  File "<string>", line 1, in <lambda>
  File "/home/dazzolin/test/2023aspmc/aspmc/aspmc/signal_handling.py", line 17, in handler
    raise KeyboardInterrupt("Received Control+C, cleaning up and shutting down.")
KeyboardInterrupt: Received Control+C, cleaning up and shutting down.
